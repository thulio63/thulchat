// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const checkPassword = `-- name: CheckPassword :one
SELECT id, username, created_at, updated_at, nickname
FROM users
WHERE password = $1
`

type CheckPasswordRow struct {
	ID        uuid.UUID
	Username  string
	CreatedAt time.Time
	UpdatedAt time.Time
	Nickname  sql.NullString
}

func (q *Queries) CheckPassword(ctx context.Context, password []byte) (CheckPasswordRow, error) {
	row := q.db.QueryRowContext(ctx, checkPassword, password)
	var i CheckPasswordRow
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Nickname,
	)
	return i, err
}

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, created_at, updated_at, username, password, nickname)
VALUES (
    gen_random_uuid(),
    NOW(),
    NOW(),
    $1, 
    $2,
    NULL
)
RETURNING id, created_at, updated_at, username, password, nickname
`

type CreateUserParams struct {
	Username string
	Password []byte
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Username, arg.Password)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Username,
		&i.Password,
		&i.Nickname,
	)
	return i, err
}

const findUser = `-- name: FindUser :one
SELECT id
FROM users
WHERE username = $1
`

func (q *Queries) FindUser(ctx context.Context, username string) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, findUser, username)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}

const setNickname = `-- name: SetNickname :one
INSERT INTO users (nickname)
VALUES ($1)
RETURNING id, created_at, updated_at, username, password, nickname
`

func (q *Queries) SetNickname(ctx context.Context, nickname sql.NullString) (User, error) {
	row := q.db.QueryRowContext(ctx, setNickname, nickname)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Username,
		&i.Password,
		&i.Nickname,
	)
	return i, err
}
